"""Add corrected models for multi-tenant agency system

Revision ID: ddd5c9f2d002
Revises: 
Create Date: 2025-09-14 13:53:44.860412

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ddd5c9f2d002'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('assets')
    op.add_column('analysis_executions', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('analysis_executions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('analysis_executions', 'session_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.alter_column('analysis_executions', 'master_agent_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('analysis_executions', 'specialists_used',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('analysis_executions', 'iterations',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('analysis_executions', 'execution_time_ms',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('analysis_executions', 'final_result',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('analysis_executions', 'parameters')
    op.drop_column('analysis_executions', 'error_message')
    op.drop_column('analysis_executions', 'success')
    op.drop_column('analysis_executions', 'intent_type')
    op.drop_column('analysis_executions', 'confidence')
    op.add_column('analytics_cache', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.add_column('analytics_cache', sa.Column('cache_data', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.alter_column('analytics_cache', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('analytics_cache', 'asset_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_unique_constraint(None, 'analytics_cache', ['cache_key'])
    op.drop_column('analytics_cache', 'data')
    op.add_column('chat_messages', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.add_column('chat_messages', sa.Column('agent_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('chat_messages', sa.Column('execution_time', sa.Float(), nullable=True))
    op.drop_column('chat_messages', 'user_id')
    op.drop_column('chat_messages', 'analysis_execution_id')
    op.add_column('connections', sa.Column('digital_asset_id', sa.Integer(), nullable=False))
    op.add_column('connections', sa.Column('user_id', sa.Integer(), nullable=False))
    op.alter_column('connections', 'auth_type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('OAUTH2', 'API_KEY', 'BASIC_AUTH', 'TOKEN', name='authtype'),
               existing_nullable=False)
    op.alter_column('connections', 'scopes',
               existing_type=sa.VARCHAR(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('connections', 'access_token_enc',
               existing_type=sa.VARCHAR(),
               type_=sa.LargeBinary(),
               existing_nullable=True)
    op.alter_column('connections', 'refresh_token_enc',
               existing_type=sa.VARCHAR(),
               type_=sa.LargeBinary(),
               existing_nullable=True)
    op.alter_column('connections', 'token_hash',
               existing_type=sa.VARCHAR(length=255),
               type_=sqlmodel.sql.sqltypes.AutoString(length=64),
               existing_nullable=True)
    op.create_foreign_key(None, 'connections', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'connections', 'digital_assets', ['digital_asset_id'], ['id'])
    op.drop_column('connections', 'sync_status')
    op.drop_column('connections', 'last_sync_at')
    op.drop_column('connections', 'error_count')
    op.drop_column('connections', 'asset_id')
    op.alter_column('customers', 'type',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('AGENCY', 'BRAND', 'MERCHANT', 'FREELANCER', 'IN_HOUSE', name='customertype'),
               existing_nullable=False)
    op.alter_column('customers', 'status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('ACTIVE', 'TRIAL', 'PAUSED', 'CHURNED', name='customerstatus'),
               existing_nullable=False)
    op.alter_column('customers', 'plan',
               existing_type=sa.VARCHAR(length=50),
               type_=sqlmodel.sql.sqltypes.AutoString(length=100),
               existing_nullable=False)
    op.alter_column('customers', 'domains',
               existing_type=sa.VARCHAR(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('customers', 'tags',
               existing_type=sa.VARCHAR(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.create_foreign_key(None, 'customers', 'users', ['primary_contact_user_id'], ['id'])
    op.add_column('kpi_catalog', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('kpi_catalog', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.add_column('kpi_catalog', sa.Column('kpi_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False))
    op.add_column('kpi_catalog', sa.Column('kpi_description', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('kpi_catalog', sa.Column('calculation_method', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('kpi_catalog', sa.Column('data_sources', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('kpi_catalog', sa.Column('category', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False))
    op.add_column('kpi_catalog', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.drop_column('kpi_catalog', 'primary_submetrics')
    op.drop_column('kpi_catalog', 'subtype')
    op.drop_column('kpi_catalog', 'lite_secondary_metric')
    op.drop_column('kpi_catalog', 'lite_primary_metric')
    op.drop_column('kpi_catalog', 'lite_primary_submetrics')
    op.drop_column('kpi_catalog', 'secondary_submetrics')
    op.drop_column('kpi_catalog', 'secondary_metric')
    op.drop_column('kpi_catalog', 'primary_metric')
    op.drop_column('kpi_catalog', 'lite_secondary_submetrics')
    op.add_column('narrative_reports', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('narrative_reports', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.add_column('narrative_reports', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('narrative_reports', sa.Column('report_title', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False))
    op.add_column('narrative_reports', sa.Column('report_content', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('narrative_reports', sa.Column('report_type', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False))
    op.add_column('narrative_reports', sa.Column('data_sources', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('narrative_reports', sa.Column('generated_by_agent', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False))
    op.add_column('narrative_reports', sa.Column('metrics_included', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('narrative_reports', sa.Column('date_range_start', sa.DateTime(), nullable=True))
    op.add_column('narrative_reports', sa.Column('date_range_end', sa.DateTime(), nullable=True))
    op.add_column('narrative_reports', sa.Column('is_published', sa.Boolean(), nullable=False))
    op.create_foreign_key(None, 'narrative_reports', 'users', ['user_id'], ['id'])
    op.drop_column('narrative_reports', 'keywords')
    op.drop_column('narrative_reports', 'category')
    op.drop_column('narrative_reports', 'location')
    op.drop_column('narrative_reports', 'name')
    op.drop_column('narrative_reports', 'hours')
    op.drop_column('narrative_reports', 'contacts')
    op.drop_column('narrative_reports', 'customer_id')
    op.drop_column('narrative_reports', 'sub_customer_id')
    op.drop_column('narrative_reports', 'url')
    op.drop_column('narrative_reports', 'last_scanned')
    op.drop_column('narrative_reports', 'description')
    op.add_column('performance_metrics', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.add_column('performance_metrics', sa.Column('metric_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False))
    op.add_column('performance_metrics', sa.Column('metric_value', sa.Float(), nullable=False))
    op.add_column('performance_metrics', sa.Column('metric_unit', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False))
    op.add_column('performance_metrics', sa.Column('agent_type', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True))
    op.add_column('performance_metrics', sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('performance_metrics', sa.Column('metric_metadata', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.drop_column('performance_metrics', 'error_type')
    op.drop_column('performance_metrics', 'analysis_type')
    op.drop_column('performance_metrics', 'success')
    op.drop_column('performance_metrics', 'execution_time_ms')
    op.drop_column('performance_metrics', 'specialists_count')
    op.drop_column('performance_metrics', 'cpu_percent')
    op.drop_column('performance_metrics', 'iterations')
    op.drop_column('performance_metrics', 'memory_usage_mb')
    op.drop_column('performance_metrics', 'timestamp')
    op.alter_column('sub_customers', 'subtype',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Enum('ECOMMERCE', 'LEADS', 'BLOG', 'CATALOG', 'LANDING_PAGE', name='subcustomertype'),
               existing_nullable=False)
    op.alter_column('sub_customers', 'status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('ACTIVE', 'TRIAL', 'PAUSED', 'CHURNED', name='customerstatus'),
               existing_nullable=False)
    op.alter_column('sub_customers', 'external_ids',
               existing_type=sa.VARCHAR(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('sub_customers', 'timezone',
               existing_type=sa.VARCHAR(length=100),
               type_=sqlmodel.sql.sqltypes.AutoString(length=50),
               nullable=True)
    op.alter_column('sub_customers', 'markets',
               existing_type=sa.VARCHAR(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('sub_customers', 'budget_monthly',
               existing_type=sa.INTEGER(),
               type_=sa.Float(),
               existing_nullable=True)
    op.alter_column('sub_customers', 'tags',
               existing_type=sa.VARCHAR(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.create_foreign_key(None, 'sub_customers', 'customers', ['customer_id'], ['id'])
    op.add_column('users', sa.Column('google_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True))
    op.add_column('users', sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True))
    op.add_column('users', sa.Column('email_verified', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('provider', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False))
    op.alter_column('users', 'phone',
               existing_type=sa.VARCHAR(length=50),
               type_=sqlmodel.sql.sqltypes.AutoString(length=20),
               existing_nullable=True)
    op.alter_column('users', 'role',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('OWNER', 'ADMIN', 'MANAGER', 'ANALYST', 'VIEWER', name='userrole'),
               existing_nullable=False)
    op.alter_column('users', 'status',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.Enum('ACTIVE', 'INVITED', 'SUSPENDED', 'DELETED', name='userstatus'),
               existing_nullable=False)
    op.alter_column('users', 'additional_customer_ids',
               existing_type=sa.VARCHAR(),
               type_=sa.JSON(),
               existing_nullable=True)
    op.alter_column('users', 'timezone',
               existing_type=sa.VARCHAR(length=100),
               type_=sqlmodel.sql.sqltypes.AutoString(length=50),
               existing_nullable=False)
    op.drop_constraint(op.f('users_email_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_unique_constraint(None, 'users', ['google_id'])
    op.create_foreign_key(None, 'users', 'customers', ['primary_customer_id'], ['id'])
    op.add_column('webhook_entries', sa.Column('updated_at', sa.DateTime(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('webhook_entries', 'updated_at')
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint(op.f('users_email_key'), 'users', ['email'], postgresql_nulls_not_distinct=False)
    op.alter_column('users', 'timezone',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=50),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.alter_column('users', 'additional_customer_ids',
               existing_type=sa.JSON(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('users', 'status',
               existing_type=sa.Enum('ACTIVE', 'INVITED', 'SUSPENDED', 'DELETED', name='userstatus'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('users', 'role',
               existing_type=sa.Enum('OWNER', 'ADMIN', 'MANAGER', 'ANALYST', 'VIEWER', name='userrole'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('users', 'phone',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=20),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
    op.drop_column('users', 'provider')
    op.drop_column('users', 'email_verified')
    op.drop_column('users', 'avatar_url')
    op.drop_column('users', 'google_id')
    op.drop_constraint(None, 'sub_customers', type_='foreignkey')
    op.alter_column('sub_customers', 'tags',
               existing_type=sa.JSON(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('sub_customers', 'budget_monthly',
               existing_type=sa.Float(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('sub_customers', 'markets',
               existing_type=sa.JSON(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('sub_customers', 'timezone',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=50),
               type_=sa.VARCHAR(length=100),
               nullable=False)
    op.alter_column('sub_customers', 'external_ids',
               existing_type=sa.JSON(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('sub_customers', 'status',
               existing_type=sa.Enum('ACTIVE', 'TRIAL', 'PAUSED', 'CHURNED', name='customerstatus'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('sub_customers', 'subtype',
               existing_type=sa.Enum('ECOMMERCE', 'LEADS', 'BLOG', 'CATALOG', 'LANDING_PAGE', name='subcustomertype'),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.add_column('performance_metrics', sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('performance_metrics', sa.Column('memory_usage_mb', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('performance_metrics', sa.Column('iterations', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('performance_metrics', sa.Column('cpu_percent', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('performance_metrics', sa.Column('specialists_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('performance_metrics', sa.Column('execution_time_ms', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('performance_metrics', sa.Column('success', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('performance_metrics', sa.Column('analysis_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.add_column('performance_metrics', sa.Column('error_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_column('performance_metrics', 'metric_metadata')
    op.drop_column('performance_metrics', 'session_id')
    op.drop_column('performance_metrics', 'agent_type')
    op.drop_column('performance_metrics', 'metric_unit')
    op.drop_column('performance_metrics', 'metric_value')
    op.drop_column('performance_metrics', 'metric_name')
    op.drop_column('performance_metrics', 'updated_at')
    op.add_column('narrative_reports', sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('narrative_reports', sa.Column('last_scanned', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('narrative_reports', sa.Column('url', sa.VARCHAR(length=500), autoincrement=False, nullable=False))
    op.add_column('narrative_reports', sa.Column('sub_customer_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('narrative_reports', sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('narrative_reports', sa.Column('contacts', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('narrative_reports', sa.Column('hours', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('narrative_reports', sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('narrative_reports', sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('narrative_reports', sa.Column('category', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('narrative_reports', sa.Column('keywords', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'narrative_reports', type_='foreignkey')
    op.drop_column('narrative_reports', 'is_published')
    op.drop_column('narrative_reports', 'date_range_end')
    op.drop_column('narrative_reports', 'date_range_start')
    op.drop_column('narrative_reports', 'metrics_included')
    op.drop_column('narrative_reports', 'generated_by_agent')
    op.drop_column('narrative_reports', 'data_sources')
    op.drop_column('narrative_reports', 'report_type')
    op.drop_column('narrative_reports', 'report_content')
    op.drop_column('narrative_reports', 'report_title')
    op.drop_column('narrative_reports', 'user_id')
    op.drop_column('narrative_reports', 'updated_at')
    op.drop_column('narrative_reports', 'created_at')
    op.add_column('kpi_catalog', sa.Column('lite_secondary_submetrics', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('kpi_catalog', sa.Column('primary_metric', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('kpi_catalog', sa.Column('secondary_metric', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('kpi_catalog', sa.Column('secondary_submetrics', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('kpi_catalog', sa.Column('lite_primary_submetrics', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('kpi_catalog', sa.Column('lite_primary_metric', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('kpi_catalog', sa.Column('lite_secondary_metric', sa.VARCHAR(length=255), autoincrement=False, nullable=False))
    op.add_column('kpi_catalog', sa.Column('subtype', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('kpi_catalog', sa.Column('primary_submetrics', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('kpi_catalog', 'is_active')
    op.drop_column('kpi_catalog', 'category')
    op.drop_column('kpi_catalog', 'data_sources')
    op.drop_column('kpi_catalog', 'calculation_method')
    op.drop_column('kpi_catalog', 'kpi_description')
    op.drop_column('kpi_catalog', 'kpi_name')
    op.drop_column('kpi_catalog', 'updated_at')
    op.drop_column('kpi_catalog', 'created_at')
    op.drop_constraint(None, 'customers', type_='foreignkey')
    op.alter_column('customers', 'tags',
               existing_type=sa.JSON(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('customers', 'domains',
               existing_type=sa.JSON(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('customers', 'plan',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('customers', 'status',
               existing_type=sa.Enum('ACTIVE', 'TRIAL', 'PAUSED', 'CHURNED', name='customerstatus'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('customers', 'type',
               existing_type=sa.Enum('AGENCY', 'BRAND', 'MERCHANT', 'FREELANCER', 'IN_HOUSE', name='customertype'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.add_column('connections', sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('connections', sa.Column('error_count', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('connections', sa.Column('last_sync_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('connections', sa.Column('sync_status', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'connections', type_='foreignkey')
    op.drop_constraint(None, 'connections', type_='foreignkey')
    op.alter_column('connections', 'token_hash',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=64),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('connections', 'refresh_token_enc',
               existing_type=sa.LargeBinary(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('connections', 'access_token_enc',
               existing_type=sa.LargeBinary(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('connections', 'scopes',
               existing_type=sa.JSON(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('connections', 'auth_type',
               existing_type=sa.Enum('OAUTH2', 'API_KEY', 'BASIC_AUTH', 'TOKEN', name='authtype'),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_column('connections', 'user_id')
    op.drop_column('connections', 'digital_asset_id')
    op.add_column('chat_messages', sa.Column('analysis_execution_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('chat_messages', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_column('chat_messages', 'execution_time')
    op.drop_column('chat_messages', 'agent_type')
    op.drop_column('chat_messages', 'updated_at')
    op.add_column('analytics_cache', sa.Column('data', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'analytics_cache', type_='unique')
    op.alter_column('analytics_cache', 'asset_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('analytics_cache', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('analytics_cache', 'cache_data')
    op.drop_column('analytics_cache', 'updated_at')
    op.add_column('analysis_executions', sa.Column('confidence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('analysis_executions', sa.Column('intent_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False))
    op.add_column('analysis_executions', sa.Column('success', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('analysis_executions', sa.Column('error_message', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('analysis_executions', sa.Column('parameters', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.alter_column('analysis_executions', 'final_result',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('analysis_executions', 'execution_time_ms',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('analysis_executions', 'iterations',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('analysis_executions', 'specialists_used',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('analysis_executions', 'master_agent_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('analysis_executions', 'session_id',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('analysis_executions', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('analysis_executions', 'updated_at')
    op.create_table('assets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('website_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('asset_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('handle', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('external_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('meta', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('owner_customer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('sub_customer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('assets_pkey'))
    )
    # ### end Alembic commands ###
