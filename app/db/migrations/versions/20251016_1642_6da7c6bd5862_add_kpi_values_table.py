"""add_kpi_values_table

Revision ID: 6da7c6bd5862
Revises: 39b5f759b84e
Create Date: 2025-10-16 16:42:57.458276

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '6da7c6bd5862'
down_revision = '39b5f759b84e'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('detailed_execution_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('analysis_id', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('sequence_number', sa.Integer(), nullable=False),
    sa.Column('log_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('parent_log_id', sa.Integer(), nullable=True),
    sa.Column('depth_level', sa.Integer(), nullable=False),
    sa.Column('crew_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('task_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('agent_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tool_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('duration_ms', sa.Integer(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('input_data', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('output_data', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('error_details', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('log_metadata', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('icon', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('color', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_collapsible', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_detailed_execution_logs_analysis_id'), 'detailed_execution_logs', ['analysis_id'], unique=False)
    op.create_index(op.f('ix_detailed_execution_logs_session_id'), 'detailed_execution_logs', ['session_id'], unique=False)
    op.create_index(op.f('ix_detailed_execution_logs_timestamp'), 'detailed_execution_logs', ['timestamp'], unique=False)
    op.create_table('kpi_values',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('kpi_goal_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('campaign_num', sa.Integer(), nullable=False),
    sa.Column('campaign_id', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('campaign_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('campaign_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('ad_group_id', sa.Integer(), nullable=True),
    sa.Column('ad_group_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('ad_group_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('ad_id', sa.Integer(), nullable=True),
    sa.Column('ad_status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('ad_score', sa.Integer(), nullable=True),
    sa.Column('ad_headline', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('advertising_channel', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('campaign_objective', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('daily_budget', sa.Float(), nullable=True),
    sa.Column('weekly_budget', sa.Float(), nullable=True),
    sa.Column('target_audience', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('primary_kpi_1_value', sa.Float(), nullable=True),
    sa.Column('primary_kpi_1_unit', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('secondary_kpi_1_value', sa.Float(), nullable=True),
    sa.Column('secondary_kpi_1_unit', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('secondary_kpi_2_value', sa.Float(), nullable=True),
    sa.Column('secondary_kpi_2_unit', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('secondary_kpi_3_value', sa.Float(), nullable=True),
    sa.Column('secondary_kpi_3_unit', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('landing_page', sqlmodel.sql.sqltypes.AutoString(length=500), nullable=True),
    sa.Column('measurement_date', sa.DateTime(), nullable=False),
    sa.Column('data_source', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['kpi_goal_id'], ['kpi_goals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('sub_customers')
    op.drop_column('campaigners', 'additional_agency_ids')
    op.drop_constraint(op.f('fk_connections_customer_id'), 'connections', type_='foreignkey')
    op.create_foreign_key(None, 'connections', 'customers', ['customer_id'], ['id'])
    op.alter_column('customers', 'narrative_report',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.drop_constraint(op.f('fk_customers_assigned_campaigner_id'), 'customers', type_='foreignkey')
    op.create_foreign_key(None, 'customers', 'campaigners', ['assigned_campaigner_id'], ['id'])
    op.alter_column('kpi_goals', 'campaign_status',
               existing_type=sa.VARCHAR(length=50),
               nullable=False)
    op.drop_column('kpi_goals', 'ad_name')
    op.drop_column('kpi_goals', 'summary_text')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('kpi_goals', sa.Column('summary_text', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('kpi_goals', sa.Column('ad_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.alter_column('kpi_goals', 'campaign_status',
               existing_type=sa.VARCHAR(length=50),
               nullable=True)
    op.drop_constraint(None, 'customers', type_='foreignkey')
    op.create_foreign_key(op.f('fk_customers_assigned_campaigner_id'), 'customers', 'campaigners', ['assigned_campaigner_id'], ['id'], ondelete='SET NULL')
    op.alter_column('customers', 'narrative_report',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_constraint(None, 'connections', type_='foreignkey')
    op.create_foreign_key(op.f('fk_connections_customer_id'), 'connections', 'customers', ['customer_id'], ['id'], ondelete='CASCADE')
    op.add_column('campaigners', sa.Column('additional_agency_ids', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.create_table('sub_customers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('subtype', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('external_ids', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('timezone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('markets', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('budget_monthly', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('tags', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('sub_customers_pkey1'))
    )
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('OWNER', 'ADMIN', 'MANAGER', 'ANALYST', 'VIEWER', name='userrole'), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'INVITED', 'SUSPENDED', 'DELETED', name='userstatus'), autoincrement=False, nullable=False),
    sa.Column('primary_customer_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('additional_customer_ids', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('locale', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('timezone', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('google_id', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('avatar_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('email_verified', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('last_login_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['primary_customer_id'], ['customers.id'], name=op.f('users_primary_customer_id_fkey1')),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey1')),
    sa.UniqueConstraint('google_id', name=op.f('users_google_id_key1'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.drop_table('kpi_values')
    op.drop_index(op.f('ix_detailed_execution_logs_timestamp'), table_name='detailed_execution_logs')
    op.drop_index(op.f('ix_detailed_execution_logs_session_id'), table_name='detailed_execution_logs')
    op.drop_index(op.f('ix_detailed_execution_logs_analysis_id'), table_name='detailed_execution_logs')
    op.drop_table('detailed_execution_logs')
    # ### end Alembic commands ###
