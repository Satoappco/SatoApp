"""Add invite_tokens table and update UserRole enum

Revision ID: b4e58ca1a040
Revises: 56c054b308db
Create Date: 2025-10-19 13:01:10.614667

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = 'b4e58ca1a040'
down_revision = '56c054b308db'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add new enum values to existing userrole enum
    op.execute("ALTER TYPE userrole ADD VALUE 'CAMPAIGNER'")
    
    # Commit the enum change before using it
    op.execute("COMMIT")
    
    # Create invite_tokens table using raw SQL to avoid enum issues
    op.execute("""
        CREATE TABLE invite_tokens (
            id SERIAL PRIMARY KEY,
            created_at TIMESTAMP NOT NULL DEFAULT NOW(),
            updated_at TIMESTAMP NOT NULL DEFAULT NOW(),
            token VARCHAR(255) NOT NULL UNIQUE,
            agency_id INTEGER NOT NULL REFERENCES agencies(id),
            invited_by_campaigner_id INTEGER NOT NULL REFERENCES campaigners(id),
            invited_email VARCHAR(255),
            role userrole NOT NULL DEFAULT 'CAMPAIGNER',
            is_used BOOLEAN NOT NULL DEFAULT FALSE,
            used_at TIMESTAMP,
            used_by_campaigner_id INTEGER REFERENCES campaigners(id),
            expires_at TIMESTAMP NOT NULL,
            max_uses INTEGER NOT NULL DEFAULT 1,
            use_count INTEGER NOT NULL DEFAULT 0
        )
    """)
    
    # Create index on token
    op.execute("CREATE UNIQUE INDEX ix_invite_tokens_token ON invite_tokens (token)")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_invite_tokens_token'), table_name='invite_tokens')
    op.drop_table('invite_tokens')
    # ### end Alembic commands ###
